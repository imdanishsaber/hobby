import Family from '../models/family';
import Unit from '../models/unit';
import { relToNode, withId } from '../utils';
import setUnitDefShifts from '../utils/setUnitDefShifts';
import getChildUnits from './getChildUnits';
export default (store) => {
    return function (parentIDs, type = 'root', isMain = false) {
        const family = new Family(store.getNextId(), type, isMain);
        const parents = parentIDs.map(store.getNode.bind(store));
        if (family.main)
            parents.sort((a, b) => (b.gender !== store.gender) ? -1 : 0);
        family.pUnits.push(new Unit(family.id, parents));
        let children = [];
        if (parents.length === 1) {
            children = parents[0].children.map(relToNode(store));
        }
        else {
            const firstParent = parents[0];
            const secondParent = parents[1];
            children = firstParent.children
                .filter(rel => secondParent.children.find(withId(rel.id)))
                .map(relToNode(store));
        }
        children.forEach(child => {
            getChildUnits(store, family.id, child).forEach(unit => {
                family.cUnits.push(unit);
            });
        });
        setUnitDefShifts(family);
        return family;
    };
};
//# sourceMappingURL=byParents.js.map